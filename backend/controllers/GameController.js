import Game from "../models/Game.js";
import {
  startGameSimulation,
  pauseGame,
  endGame,
  resumeGame,
} from "../service/GameService.js";

export async function iniciarSimulacao(req, res) {
  try {
    const existingGame = await Game.findOne({
      status: { $in: ["em_andamento", "pausado"] },
    });

    if (existingGame) {
      return res.status(400).json({
        error: `J√° existe uma simula√ß√£o com status '${existingGame.status}'.`,
      });
    }

    startGameSimulation();
    res.status(200).json({ message: "Simula√ß√£o iniciada com sucesso." });
  } catch (err) {
    console.error("Erro ao iniciar simula√ß√£o:", err);
    res.status(500).json({ error: "Erro ao iniciar simula√ß√£o." });
  }
}

export async function pausarSimulacao(req, res) {
  try {
    const jogo = await Game.findOne({ status: "em_andamento" });

    if (!jogo) {
      return res
        .status(400)
        .json({ error: "‚ùå Nenhuma partida em andamento no momento." });
    }

    await pauseGame();
    res.status(200).json({ message: "‚è∏Ô∏è Pausando a simula√ß√£o..." });
  } catch (err) {
    console.error("Erro ao pausar simula√ß√£o:", err);
    res.status(500).json({ error: "Erro ao pausar simula√ß√£o." });
  }
}

export async function finalizarSimulacao(req, res) {
  try {
    const jogo = await Game.findOne({
      status: { $in: ["em_andamento", "pausado"] },
    });

    if (!jogo) {
      return res
        .status(400)
        .json({ error: "‚ùå Nenhuma partida em andamento no momento." });
    }

    await endGame();
    res.status(200).json({ message: "üèÅ Finalizando a partida atual." });
  } catch (err) {
    console.error("Erro ao finalizar simula√ß√£o:", err);
    res.status(500).json({ error: "Erro ao finalizar simula√ß√£o." });
  }
}

export async function retomarSimulacao(req, res) {
  try {
    const jogo = await Game.findOne({ status: "pausado" });

    if (!jogo) {
      return res
        .status(400)
        .json({ error: "‚ùå Nenhuma partida pausada no momento." });
    }

    await resumeGame();
    res.status(200).json({ message: "‚ñ∂Ô∏è Retomando a partida atual." });
  } catch (err) {
    console.error("Erro ao retomar simula√ß√£o:", err);
    res.status(500).json({ error: "Erro ao retomar simula√ß√£o." });
  }
}
